<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>{{{appName}}}</title>
	 <link href='http://fonts.googleapis.com/css?family=Lato&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
      <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
	  
	    <script type="text/javascript" src="https://code.jquery.com/jquery-1.10.1.min.js"></script>
	 <script>
       $(function(){
       $('ul li a').on('click', function(){
           $(this).parent().addClass('current').siblings().removeClass('current');
         });
       });
        </script>
    <style type="text/css">
      {{>style.css}}
    </style>
	
  </head>
  <body>
  <div class="projName" >{{{appName}}}</div>
   <div class="contWrapper"> 
     <div class="cont">
              
	 <div class="contLeft">
	 <form  action="#" class="filterform" >
    <input type="text" placeholder="Search methods" class="filterinput" onkeyup="listFilter()">
   
  </form>
   {{#apiInfo}}
   <ul id="list">
   
	{{#apis}}
  {{#operations}}
  {{#operation}}
 <li><a href="#{{nickname}}"><code><span class="http-method">{{httpMethod}} &nbsp;</span> {{nickname}}</code></a></li>
  {{/operation}}
  {{/operations}}
  {{/apis}}
	</ul>
	{{/apiInfo}}
	</div>
	  <div class="contRight">
	   <h1>{{{appName}}}</h1>
	   <div class="app-desc">{{{appDescription}}}</div>
	   {{#version}}<div class="app-desc">Version: {{{version}}}</div>{{/version}}
	   
 {{#apiInfo}}
  {{#apis}}
  {{#operations}}
  {{#operation}}
	     <div class="method"><a name="{{nickname}}"/>
	    <div class="method-path">
		 <a class="up" href="#top"><span class="arrow-up"></span></a>
		
		  <pre class="{{httpMethod}}"><code class="huge"><span class="http-method">{{httpMethod}}</span> {{path}}</code></pre>
		  </div>
		 <div class="method-summary">{{summary}} (<span class="nickname">{{nickname}}</span>)</div>
		    <div class="method-notes">{{notes}}</div>
			 {{#hasPathParams}}
    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      {{#pathParams}}{{>pathParam}}{{/pathParams}}
    </div>  <!-- field-items -->
    {{/hasPathParams}}

    {{#hasConsumes}}
    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="heaader">Content-Type</span> request header:
    <ul>
    {{#consumes}}
      <li><code>{{mediaType}}</code></li>
    {{/consumes}}
    </ul>
    {{/hasConsumes}}

    {{#hasBodyParam}}
    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      {{#bodyParams}}{{>bodyParam}}{{/bodyParams}}
    </div>  <!-- field-items -->
    {{/hasBodyParam}}

    {{#hasHeaderParam}}
    <h3 class="field-label">Request headers</h3>
    <div class="field-items">
      {{#headerParam}}{{>headerParam}}{{/headerParam}}
    </div>  <!-- field-items -->
    {{/hasHeaderParam}}

    {{#hasQueryParams}}
    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      {{#queryParams}}{{>queryParam}}{{/queryParams}}
    </div>  <!-- field-items -->
    {{/hasQueryParams}}

    {{#hasFormParams}}
    <h3 class="field-label">Form parameters</h3>
    <div class="field-items">
      {{#formParams}}{{>formParam}}{{/formParams}}
    </div>  <!-- field-items -->
    {{/hasFormParams}}

    {{#returnType}}
    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      {{#hasReference}}{{^returnSimpleType}}{{returnContainer}}[{{/returnSimpleType}}<a href="#{{returnBaseType}}">{{returnBaseType}}</a>{{^returnSimpleType}}]{{/returnSimpleType}}{{/hasReference}}
      {{^hasReference}}{{returnType}}{{/hasReference}}
    </div>
    {{/returnType}}

    <!--Todo: process Response Object and its headers, schema, examples -->

    {{#hasExamples}}
    {{#examples}}
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: {{{contentType}}}</div>
    <pre class="example"><code>{{{example}}}</code></pre>
    {{/examples}}
    {{/hasExamples}}

    {{#hasProduces}}
    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="heaader">Content-Type</span> response header.
    <ul>
    {{#produces}}
      <li><code>{{mediaType}}</code></li>
    {{/produces}}
    </ul>
    {{/hasProduces}}

    <h3 class="field-label">Responses</h3>
    {{#responses}}
    <h4 class="field-label">{{code}}</h4>
    {{message}}
    {{#examples}}
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: {{{contentType}}}</div>
    <pre class="example"><code>{{example}}</code></pre>
    {{/examples}}
    {{/responses}}
  </div> <!-- method -->
    <hr/>
  {{/operation}}
  {{/operations}}
  {{/apis}}
  {{/apiInfo}}
  
	  </div>
	</div>
   </div>
  
   <script>
  jQuery.expr[':'].icontains = function(a, i, m) {
  return jQuery(a).text().toUpperCase()
      .indexOf(m[3].toUpperCase()) >= 0;
};
   function listFilter() {

  
    var filter = $(".filterinput").val();
	
    if (filter) {
      $("#list").find("a:not(:icontains(" + filter + "))").parent().slideUp();
      $("#list").find("a:icontains(" + filter + ")").parent().slideDown();
    } else {
      $("#list").find("li").slideDown();
    }
 
 
}
          $(function() {
		  $("a[href='#top']").click(function() {
  $("html, body").animate({ scrollTop: 0 }, "slow");
  return false;
});
		  
		  
            $('a[href*=#]:not([href=#])').click(function() {
              if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') 
          && location.hostname == this.hostname) {
                var target = $(this.hash);
                target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
                if (target.length) {
                  $('html,body').animate({
                    scrollTop: target.offset().top - 85 //offsets for fixed header
                  }, 500);
                  return false;
                }
              }
            });
            //Executed on page load with URL containing an anchor tag.
            if($(location.href.split("#")[1])) {
                var target = $('#'+location.href.split("#")[1]);
                if (target.length) {
                  $('html,body').animate({
                    scrollTop: target.offset().top - 85 //offset height of header here too.
                  }, 500);
                  return false;
                }
              }
          });
          </script>
 
  
  </body>
</html>
